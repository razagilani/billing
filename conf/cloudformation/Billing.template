{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Description" : "Template to create a Billing stack",
  "Parameters" : {
    "KeyName": {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription" : "must be the name of an existing EC2 KeyPair."
    },
    "InstanceType" : {
      "Description" : "EC2 instance type",
      "Type" : "String",
      "Default" : "t2.micro",
      "AllowedValues" : ["t2.micro", "t2.small", "t2.medium", "m3.large", "c4.xlarge", "c4.4xlarge"],
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },
    "HostedZone": {
      "Description" : "Hosted Zone ID to add internal dns entries to, must already exist in Route53",
      "Type" : "String"
    },
    "HostedZoneId": {
      "Description" : "Domain to add internal dns entries to, must already exist in Route53",
      "Type" : "String"
    },
    "VpcId" : {
      "Type" : "String",
      "Description" : "VpcId of your existing Virtual Private Cloud (VPC)"
    },
    "NatSecurityGroup" : {
      "Type" : "String",
      "Description" : "(Required) Security group of the nat instance, allowing web traffic to reach the application instance"
    },
    "ExternalNatSecurityGroup" : {
      "Type" : "String",
      "Description" : "(Required) Security group of the nat instance, allowing web traffic to reach the application instance"
    },
    "SshSecurityGroup" : {
      "Type" : "String",
      "Description" : "Security group containing ssh access rules"
    },
    "RabbitMqSecurityGroup" : {
      "Type" : "String",
      "Default" : "",
      "Description" : "(Required) Security group for RabbitMQ"
    },
    "MongoSecurityGroup" : {
      "Type" : "String",
      "Default" : "",
      "Description" : "(Required) Security group for Mongo database host"
    },
    "PostgresSecurityGroup" : {
      "Type" : "String",
      "Description" : "(Required) Security group for Postgres database host"
    },
    "NexusWebSecurityGroup" : {
      "Type" : "String",
      "Default" : "",
      "Description" : "(Required) Security group for Mongo database host"
    },
    "OlapSecurityGroup" : {
      "Type" : "String",
      "Default" : "",
      "Description" : "(Required) Security group for Olap Mongo database host"
    },
    "EbsVolumeSize" : {
      "Type" : "Number",
      "Default" : 20,
      "Description" : "Size in GB of the ebs volume attached to this instance (default is 20)"
    },
    "InstanceName" : {
      "Type" : "String",
      "Default" : "billing",
      "Description" : "name of host instance (default is billing)"
    },
    "InstanceSubnet" : {
      "Type" : "String",
      "Description" : "ID of subnet to create instance"
    },
    "Environment" : {
      "Type" : "String",
      "Description" : "Target environment of stack"
    }
  },
  "Mappings" : {
    "AWSInstanceType2Arch" : {
      "t2.micro"    : { "Arch" : "HVM64"  },
      "t2.small"    : { "Arch" : "HVM64"  },
      "t2.medium"   : { "Arch" : "HVM64"  },
      "m3.large"   : { "Arch" : "HVM64"  },
      "c4.xlarge"   : { "Arch" : "HVM64"  },
      "c4.4xlarge"   : { "Arch" : "HVM64"  }
    },
    "AWSRegionArch2AMI" : {
      "us-east-1"      : { "PV64" : "ami-146e2a7c", "HVM64" : "ami-146e2a7c", "HVMG2" : "ami-3a329952"  },
      "us-west-2"      : { "PV64" : "ami-af86c69f", "HVM64" : "ami-8786c6b7", "HVMG2" : "ami-47296a77"  },
      "us-west-1"      : { "PV64" : "ami-c7a8a182", "HVM64" : "ami-cfa8a18a", "HVMG2" : "ami-331b1376"  },
      "eu-west-1"      : { "PV64" : "ami-aa8f28dd", "HVM64" : "ami-748e2903", "HVMG2" : "ami-00913777"  },
      "ap-southeast-1" : { "PV64" : "ami-20e1c572", "HVM64" : "ami-d6e1c584", "HVMG2" : "ami-fabe9aa8"  },
      "ap-northeast-1" : { "PV64" : "ami-21072820", "HVM64" : "ami-35072834", "HVMG2" : "ami-5dd1ff5c"  },
      "ap-southeast-2" : { "PV64" : "ami-8b4724b1", "HVM64" : "ami-fd4724c7", "HVMG2" : "ami-e98ae9d3"  },
      "sa-east-1"      : { "PV64" : "ami-9d6cc680", "HVM64" : "ami-956cc688", "HVMG2" : "NOT_SUPPORTED" },
      "cn-north-1"     : { "PV64" : "ami-a857c591", "HVM64" : "ami-ac57c595", "HVMG2" : "NOT_SUPPORTED" },
      "eu-central-1"   : { "PV64" : "ami-a03503bd", "HVM64" : "ami-b43503a9", "HVMG2" : "ami-b03503ad"  }
    }
  },
  "Resources" : {
    "ApplicationSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "VpcId" : { "Ref" : "VpcId" },
        "GroupDescription" : "Instance security group for billing instance",
        "SecurityGroupIngress" : [ ],
        "Tags" : [
            {"Key" : "Name", "Value" : {"Ref" : "InstanceName"}},
            {"Key" : "Environment", "Value" : {"Ref" : "Environment"}}
        ]
      }
    },
    "ApplicationInstance" : {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
        "UserData": {"Fn::Base64" : {"Fn::Join" : ["\n",[
          "#cloud-config",
          {"Fn::Join" : ["", ["local-hostname: ", {"Ref":"InstanceName"}, "-", {"Ref":"Environment"}, ".nextility.net"]]},
          {"Fn::Join" : ["", ["fqdn: ", {"Ref":"InstanceName"}, "-", {"Ref":"Environment"}, ".nextility.net"]]},
          "manage_etc_hosts: true",
          "preserve_hostname: false",
          "packages:",
          " - puppet"
        ]]}},
        "SubnetId" : {"Ref" : "InstanceSubnet"},
        "InstanceType" : { "Ref" : "InstanceType" },
        "SecurityGroupIds" : [{"Ref" : "ApplicationSecurityGroup"}, {"Ref": "SshSecurityGroup"}, {"Ref" : "RabbitMqSecurityGroup"}],
        "Tags" : [
            {"Key" : "Name", "Value" : {"Ref" : "InstanceName"}},
            {"Key" : "Environment", "Value" : {"Ref" : "Environment"}}
        ],
        "BlockDeviceMappings" : [
          {
            "DeviceName": "/dev/xvda",
            "Ebs" : {
              "DeleteOnTermination": true,
              "VolumeSize": {"Ref" : "EbsVolumeSize"},
              "VolumeType": "standard"
            },
            "VirtualName" : "/dev/xvda"
          }
        ],
        "KeyName" : { "Ref" : "KeyName" },
        "ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" },
                          { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "InstanceType" }, "Arch" ] } ] }
      }
    },
    "NatIngressRule" : {
      "Type" : "AWS::EC2::SecurityGroupIngress",
      "Properties" : {
        "GroupId" : {"Ref" : "ApplicationSecurityGroup"},
        "FromPort" : 80,
        "ToPort" : 80,
        "IpProtocol" : "tcp",
        "SourceSecurityGroupId" : {"Ref" : "NatSecurityGroup"}
      }
    },
    "ExternalNatIngressRule" : {
      "Type" : "AWS::EC2::SecurityGroupIngress",
      "Properties" : {
        "GroupId" : {"Ref" : "ApplicationSecurityGroup"},
        "FromPort" : 80,
        "ToPort" : 80,
        "IpProtocol" : "tcp",
        "SourceSecurityGroupId" : {"Ref" : "ExternalNatSecurityGroup"}
      }
    },
    "MongoIngressRule" : {
      "Type" : "AWS::EC2::SecurityGroupIngress",
      "Properties" : {
        "GroupId" : {"Ref" : "MongoSecurityGroup"},
        "FromPort" : 27017,
        "ToPort" : 27017,
        "IpProtocol" : "tcp",
        "SourceSecurityGroupId" : {"Ref" : "ApplicationSecurityGroup"}
      }
    },
    "PostgresInstanceIngressRule" : {
      "Type" : "AWS::EC2::SecurityGroupIngress",
      "Properties" : {
        "GroupId" : {"Ref" : "PostgresSecurityGroup"},
        "FromPort" : 5432,
        "ToPort" : 5432,
        "IpProtocol" : "tcp",
        "SourceSecurityGroupId" : {"Ref" : "ApplicationSecurityGroup"}
      }
    },
    "OlapIngressRule" : {
      "Type" : "AWS::EC2::SecurityGroupIngress",
      "Properties" : {
        "GroupId" : {"Ref" : "OlapSecurityGroup"},
        "FromPort" : 27017,
        "ToPort" : 27017,
        "IpProtocol" : "tcp",
        "SourceSecurityGroupId" : {"Ref" : "ApplicationSecurityGroup"}
      }
    },
    "NexusWebIngressRule" : {
      "Type" : "AWS::EC2::SecurityGroupIngress",
      "Properties" : {
        "GroupId" : {"Ref" : "NexusWebSecurityGroup"},
        "FromPort" : 80,
        "ToPort" : 80,
        "IpProtocol" : "tcp",
        "SourceSecurityGroupId" : {"Ref" : "ApplicationSecurityGroup"}
      }
    },
    "InternalNatDns" : {
      "Type" : "AWS::Route53::RecordSet",
      "Properties" : {
         "HostedZoneId" : { "Ref" : "HostedZoneId" },
         "Name" : {
            "Fn::Join" : [ "", [
               {"Ref": "InstanceName"}, "-", {"Ref": "Environment"}, ".",
               {"Ref" : "HostedZone"} ,"."
            ] ]
         },
         "Type" : "A",
         "TTL" : "60",
         "ResourceRecords" : [
            { "Fn::GetAtt" : [ "ApplicationInstance", "PrivateIp" ] }
         ]
      }
   }
  },
  "Outputs" : {
    "InstanceId" : {
      "Description" : "InstanceId of the newly created EC2 instance",
      "Value" : { "Ref" : "ApplicationInstance" }
    },
    "PrivateIp" : {
      "Description" : "Private IP of the newly created EC2 instance",
      "Value" : { "Fn::GetAtt" : [ "ApplicationInstance", "PrivateIp" ] }
    },
    "InstanceSecurityGroup" : {
      "Description" : "Security group ID for host access",
      "Value" : { "Ref" : "ApplicationSecurityGroup" }
    },
    "SshConfigSnippet" : {
      "Description": "Entry to add to ssh config file to access this host",
      "Value": {
        "Fn::Join": [
          "",
          [
            "Host ", {"Ref": "InstanceName"}, "-", {"Ref": "Environment"}, "\n",
            "HostName ", {"Fn::GetAtt": ["ApplicationInstance", "PrivateIp"]}, "\n",
            "ProxyCommand ssh nat-internal-", {"Ref" : "Environment"}, " exec nc %h %p", "\n",
            "IdentityFile ~/Dropbox/IT/ec2keys/", {"Ref" : "KeyName"}, ".pem", "\n",
            "User ec2-user", "\n\n"
          ]
        ]
      }
    }
  }
}
